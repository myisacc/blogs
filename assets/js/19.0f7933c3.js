(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{435:function(a,t,e){"use strict";e.r(t);var r=e(2),n=Object(r.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h3",{attrs:{id:"怎样学习react-从初级到高级路线图"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#怎样学习react-从初级到高级路线图"}},[a._v("#")]),a._v(" 怎样学习React—从初级到高级路线图")]),a._v(" "),t("h2",{attrs:{id:"预备知识"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#预备知识"}},[a._v("#")]),a._v(" 预备知识")]),a._v(" "),t("p",[a._v("基本了解HTML，CSS和JavaScript\n基本了解ES6特性，这里有篇文章介绍ES6特性，从一开始，你至少应该知道以下特性：1.Let; 2.Const; 3.Arrow Functions; 4.Import and Exports; 5.Classes\nnpm的基本使用")]),a._v(" "),t("h2",{attrs:{id:"准备开始"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#准备开始"}},[a._v("#")]),a._v(" 准备开始")]),a._v(" "),t("p",[a._v("你可以使用在线的代码编辑器去练习，或者你可以使用Create React App\n我分别在JSFiddle和Codepen上构建了一个开发环境\n为了掌握所有React的基础内容，你可以从下面的教程开始学习：\nReact的React official documentation\nKent C. Dodds的Beginners guide to React\nSamer Buna的Fundamentals of React\n现在你应该了解了React的基本内容，这足够我们使用React开发一个简单的Web应用\n那么现在可以看一下React的官方教程：React Official tutorial，这是一篇很好的文章，它覆盖了React的基础内容，并且非常清楚的讲解了特定的一些主题\n最后并同等重要的是，学习怎样让React应用连接API接口：\nEthan Jarrell的Fetching API with React.js")]),a._v(" "),t("h2",{attrs:{id:"开始写一些项目"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#开始写一些项目"}},[a._v("#")]),a._v(" 开始写一些项目")]),a._v(" "),t("p",[a._v("简单的To-Do应用\n简单的计算器应用\n构建一个购物车\n使用Github的API展示Github的用户统计数据")]),a._v(" "),t("h2",{attrs:{id:"react-router"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#react-router"}},[a._v("#")]),a._v(" React Router")]),a._v(" "),t("p",[a._v("React Router帮助你的单页面应用创建路由，它非常强大并且容易使用。\n马上开始：\nPaul Sherman的React Router tutorial\nLearn Code Academy的React Router and intro to SPA\nScotch.io的Routing React apps\n这些文章足够你开始使用React路由")]),a._v(" "),t("h2",{attrs:{id:"项目"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#项目"}},[a._v("#")]),a._v(" 项目")]),a._v(" "),t("p",[a._v("一个简单的CRUD应用\n克隆Hacker News")]),a._v(" "),t("p",[a._v("如果你确实对学习Router非常感兴趣，可以看看下面的教程：\nReact Training的React Router完全教程")]),a._v(" "),t("h2",{attrs:{id:"webpack"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webpack"}},[a._v("#")]),a._v(" Webpack")]),a._v(" "),t("p",[a._v("Webpack是一个著名的JavaScript的模块打包器，它帮助你的项目以静态文件维护依赖关系，让开发者不必做这件事\n和Webpack一起的还有加载器，加载器可以帮助项目运行特定的任务\n想要更多的学习Webpack，跟随下面的教程：\nAndrew Ray的When and why to use Webpack\nLearn Code Academy的Webpack tutorial\n要使用Webpack建立本地React环境，你可以看一下下面的Github库：\nHanif Roshan的React SPA template\n上面的教程足够让你开始使用Webpack，然后想要更加深入的了解，可以看下下面的指南：\nSurviveJS的Webpack introduction\nWebpack official docs")]),a._v(" "),t("h2",{attrs:{id:"服务器渲染"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#服务器渲染"}},[a._v("#")]),a._v(" 服务器渲染")]),a._v(" "),t("p",[a._v("服务器渲染是React的最酷的特性之一，它可以被任何后端技术使用\nReact的服务器渲染（SSR）帮助你在服务器创建组件，并且在浏览器里渲染成HTML，当所有的JavaScript模块在浏览器里下载完成之后，React开始登场。简单！\n首先，看下React-DOM API:\nReact的React-DOM API\n想要更深入了解，可以学习以下教程：\nTyler McGinnis的React server rendering\nRoilan Salinas的React router server rendering\nDennis Brotzky的React Server side rendering guide")]),a._v(" "),t("h2",{attrs:{id:"redux"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redux"}},[a._v("#")]),a._v(" Redux")]),a._v(" "),t("p",[a._v("Redux是为维护应用程序状态而开发的JavaScript库。在构建复杂的应用程序时，会将增加管理组件间状态的开销。 Redux可帮助您将所有状态存储在一个源中。当然，React与Redux配合得很好！\n开始：\nLearn Code Academy的Redux tutorial\nValentino Gagliardi的Redux tutorial for beginners\nCSS Tricks的React Redux\n这些教程足以开始使用Redux。但是，我也无法抗拒提到下面的教程。它很值得：\nDan Abramov的Getting started with Redux")])])}),[],!1,null,null,null);t.default=n.exports}}]);